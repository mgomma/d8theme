<?php

/**
 * @file
 * Functions to support theming in the d8theme theme.
 */

/**
 * IMplememnts HOOK_preprocess().
 * define global variables in all templates
 */
function d8theme_preprocess(&$variables, $hook, $info) {
  // Add the Drupal globals variable.
  $language = Drupal::languageManager()->getCurrentLanguage();
  $variables['lang'] = $language->getId();
}

/**
 * HOOK_theme_suggestions_block_alter().
 */
function d8theme_theme_suggestions_block_alter(array &$suggestions, array $variables) 
{
//    $block = $variables['elements'];
//    $blockType = $block['#configuration']['provider'];
//    if ($blockType == "block_content") {
//        $bundle = $block['content']['#block_content']->bundle();
//        $suggestions[] = 'block__' . $blockType . '__' . $bundle;
//    }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function d8theme_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function d8theme_page_attachments_alter(array &$page) {
  //add 
  $language = Drupal::languageManager()->getCurrentLanguage();
  $lang_css = $language->getId() == 'en' ? 'en-css' : 'ar-css';
  $page['#attached']['library'][] = 'd8theme/'.$lang_css;
  
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function d8theme_preprocess_page(array &$variables) {
}

function d8theme_preprocess_pager(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function d8theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function d8theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function d8theme_preprocess_block(array &$variables) {

}

/**
 * Add more suggestions to forms and form elements.
 */
function d8theme_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  $route_title = str_replace(' ', NULL, strtolower(\Drupal::request()->attributes->get('_title')));
      
  if($hook == 'form'){
    if(isset($variables['element']['#attributes'])){
      $suggestions[] = 'form__'.str_replace('-', NULL, $variables['element']['#attributes']['data-drupal-selector']);
    }
    
  }else if($hook == 'form_element'){
    $suggestions[] = 'form__element__'.$route_title.$variables['element']['#type'];
      
  }else if($hook == 'input' || $hook == 'textarea'){    
    $suggestions[] = 'form__'.$route_title.$variables['element']['#type'];
    if($variables['element']['#type'] == 'textfield'){
      if(!isset($variables['element']['#attributes'])){
        //add title as placeholder
        $variables['element']['#attributes']['placeholder'] =  isset($variables['element']['#title']) ? $variables['element']['#title']->render() : NULL;
        }
      }
      }
  }

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function d8theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function d8theme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function d8theme_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function d8theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function d8theme_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function d8theme_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}
/**
 * Implements hook_preprocess_select().
 */
function d8theme_preprocess_input(array &$variables) {
}

/**
 * Implements hook_preprocess_field().
 */
function d8theme_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function d8theme_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function d8theme_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function d8theme_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}